// $ANTLR : CSharp.g -> CSharpTokenTypes.txt$
CSharp    // output token vocab name
BLOCK=4
MODIFIERS=5
OBJBLOCK=6
SLIST=7
CTOR_DEF=8
METHOD_DEF=9
VARIABLE_DEF=10
INSTANCE_INIT=11
STATIC_INIT=12
TYPE=13
CLASS_DEF=14
INTERFACE_DEF=15
PACKAGE_DEF=16
ARRAY_DECLARATOR=17
EXTENDS_CLAUSE=18
IMPLEMENTS_CLAUSE=19
PARAMETERS=20
PARAMETER_DEF=21
LABELED_STAT=22
TYPECAST=23
INDEX_OP=24
POST_INC=25
POST_DEC=26
METHOD_CALL=27
EXPR=28
ARRAY_INIT=29
IMPORT=30
UNARY_MINUS=31
UNARY_PLUS=32
CASE_GROUP=33
ELIST=34
FOR_INIT=35
FOR_CONDITION=36
FOR_ITERATOR=37
FOR_EACH_CLAUSE=38
EMPTY_STAT=39
FINAL="final"=40
ABSTRACT="abstract"=41
STRICTFP="strictfp"=42
SUPER_CTOR_CALL=43
CTOR_CALL=44
PROPERTY_DEF=45
ENUM_DEF=46
STRUCT_DEF=47
SCTOR_DEF=48
EXPR_STATE=49
FIELD_DEF=50
NAME=51
ENUM_CONSTANT_DEF=52
LOCAL_PARAMETER_DEF=53
ARRAY_INSTANTIATION=54
COND_CLAUSE=55
LOCAL_VARIABLE_DEF=56
PROPERTY_SET_BODY=57
PROPERTY_GET_BODY=58
IF=59
ELSE=60
OPER_OVERLOAD_DEF=61
HASH=62
LITERAL_define="define"=63
LCURLY=64
RCURLY=65
LITERAL_namespace="namespace"=66
LITERAL_using="using"=67
IDENT=68
ASSIGN=69
SEMI=70
LBRACK=71
COMMA=72
RBRACK=73
STAR=74
LITERAL_void="void"=75
LITERAL_boolean="boolean"=76
LITERAL_byte="byte"=77
LITERAL_char="char"=78
LITERAL_short="short"=79
LITERAL_int="int"=80
LITERAL_float="float"=81
LITERAL_long="long"=82
LITERAL_double="double"=83
LITERAL_bool="bool"=84
LITERAL_sbyte="sbyte"=85
LITERAL_uint="uint"=86
LITERAL_ulong="ulong"=87
LITERAL_ushort="ushort"=88
LITERAL_decimal="decimal"=89
DOT=90
LITERAL_private="private"=91
LITERAL_public="public"=92
LITERAL_protected="protected"=93
LITERAL_static="static"=94
LITERAL_transient="transient"=95
LITERAL_native="native"=96
LITERAL_synchronized="synchronized"=97
LITERAL_const="const"=98
LITERAL_volatile="volatile"=99
LITERAL_override="override"=100
LITERAL_sealed="sealed"=101
LITERAL_virtual="virtual"=102
LITERAL_internal="internal"=103
"internal protected"=104
LITERAL_extern="extern"=105
LITERAL_readonly="readonly"=106
LITERAL_event="event"=107
LITERAL_delegate="delegate"=108
LITERAL_new="new"=109
LITERAL_unsafe="unsafe"=110
LITERAL_if="if"=111
LITERAL_elif="elif"=112
LITERAL_else="else"=113
LITERAL_endif="endif"=114
LITERAL_enum="enum"=115
COLON=116
LITERAL_struct="struct"=117
LITERAL_class="class"=118
LITERAL_interface="interface"=119
LITERAL_extends="extends"=120
":"=121
LITERAL_implicit="implicit"=122
LITERAL_explicit="explicit"=123
LITERAL_operator="operator"=124
LPAREN=125
RPAREN=126
LITERAL_this="this"=127
LITERAL_base="base"=128
BNOT=129
LITERAL_throws="throws"=130
LITERAL_params="params"=131
LITERAL_ref="ref"=132
LITERAL_out="out"=133
LITERAL_for="for"=134
LITERAL_foreach="foreach"=135
LITERAL_while="while"=136
LITERAL_do="do"=137
LITERAL_break="break"=138
LITERAL_continue="continue"=139
LITERAL_return="return"=140
LITERAL_switch="switch"=141
LITERAL_throw="throw"=142
LITERAL_goto="goto"=143
LITERAL_in="in"=144
LITERAL_case="case"=145
LITERAL_default="default"=146
LITERAL_try="try"=147
LITERAL_catch="catch"=148
LITERAL_finally="finally"=149
PLUS_ASSIGN=150
MINUS_ASSIGN=151
STAR_ASSIGN=152
DIV_ASSIGN=153
MOD_ASSIGN=154
SR_ASSIGN=155
BSR_ASSIGN=156
SL_ASSIGN=157
BAND_ASSIGN=158
BXOR_ASSIGN=159
BOR_ASSIGN=160
QUESTION=161
LOR=162
LAND=163
BOR=164
BXOR=165
BAND=166
NOT_EQUAL=167
EQUAL=168
LT=169
GT=170
LE=171
GE=172
LITERAL_instanceof="instanceof"=173
LITERAL_is="is"=174
LITERAL_as="as"=175
SL=176
SR=177
BSR=178
PLUS=179
MINUS=180
DIV=181
MOD=182
INC=183
DEC=184
LNOT=185
LITERAL_true="true"=186
LITERAL_false="false"=187
LITERAL_null="null"=188
NUM_INT=189
CHAR_LITERAL=190
STRING_LITERAL=191
NUM_FLOAT=192
NUM_LONG=193
NUM_DOUBLE=194
QUOTE=195
WS=196
SL_COMMENT=197
ML_COMMENT=198
ESC=199
HEX_DIGIT=200
VOCAB=201
EXPONENT=202
FLOAT_SUFFIX=203
